cmake_minimum_required(VERSION 3.10)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

include(BuildType.cmake)

if(DEFINED ENV{CFG_TARGET_ABI})
	set(CFG_TARGET_PLATFORM $ENV{CFG_TARGET_PLATFORM} CACHE STRING "")
endif()

if("${CFG_TARGET_PLATFORM}" STREQUAL "Android")
	set(ANDROID_NDK_HOME $ENV{ANDROID_NDK_HOME} CACHE STRING "")
	if(DEFINED ENV{CFG_TARGET_ABI})
		set(CFG_TARGET_ABI $ENV{CFG_TARGET_ABI} CACHE STRING "")
	else()
		set(CFG_TARGET_ABI "armeabi-v7a" CACHE STRING "")
	endif()

	include(Android.cmake)
elseif("${CFG_TARGET_PLATFORM}" STREQUAL "iOS")
	if(DEFINED ENV{CFG_TARGET_ABI})
		set(CFG_TARGET_ABI $ENV{CFG_TARGET_ABI} CACHE STRING "")
	else()
		set(CFG_TARGET_ABI "arm64" CACHE STRING "")
	endif()

	set(IOS_ARCH ${CFG_TARGET_ABI})
	set(IOS_UNIVERSAL TRUE)
	set(IOS_DEPLOYMENT_CFG_TARGET 8)
	set(IOS_BITCODE 0)
	include(iOS.cmake)
else()
    execute_process(COMMAND uname -s OUTPUT_VARIABLE SYSTEM_NAME OUTPUT_STRIP_TRAILING_WHITESPACE)
	set(CFG_TARGET_PLATFORM "${SYSTEM_NAME}" CACHE STRING "")
	if(DEFINED ENV{CFG_TARGET_ABI})
		set(CFG_TARGET_ABI $ENV{CFG_TARGET_ABI} CACHE STRING "")
	else()
		set(CFG_TARGET_ABI "x86_64" CACHE STRING "")
	endif()
endif()

# enable pkg-config and set pkg-config find path
set(CFG_BUILD_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/build/sysroot/${CFG_TARGET_PLATFORM}/${CFG_TARGET_ABI}" CACHE STRING "")
find_package(PkgConfig REQUIRED)
set(ENV{PKG_CONFIG_PATH} "${CFG_BUILD_ROOT}/lib/pkgconfig")

message(STATUS "********************************************")
message(STATUS "CFG_TARGET_PLATFORM : ${CFG_TARGET_PLATFORM}")
message(STATUS "CFG_TARGET_ABI      : ${CFG_TARGET_ABI}")
message(STATUS "CFG_BUILD_ROOT      : ${CFG_BUILD_ROOT}")
message(STATUS "*********************************************")

project(Elastos.SDK.Wallet.C)
add_subdirectory(src)
